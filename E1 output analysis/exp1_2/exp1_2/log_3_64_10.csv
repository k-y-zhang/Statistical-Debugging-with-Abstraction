3,64,10,start
3,64,10,raw.profile.time,358
3,64,10,coarse-grained.profile.time,2865
3,64,10,coarse-grained.profile.number,4465
3,64,10,coarse-grained.profile.size,924
3,64,10,fine-grained.profile.time,178798
3,64,10,fine-grained.profile.size,44928
3,64,10,fine-grained.profile.number,676962
3,64,10,fine-grained.preprocess.size,4869008
3,64,10,fine-grained.preprocess.time,7700
3,64,10,fine-grained.preprocess.number,5203
3,64,10,fine-grained.preprocess.time_p,6954.0
3,64,10,fine-grained.mine.size,133712
3,64,10,fine-grained.mine.time,11749
3,64,10,boost.includes,-sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--void-determineLMDirection-double[],double[],double[],double[]--
3,64,10,boost.profile.number,3842
3,64,10,boost.profile.time,36135
3,64,10,boost.profile.size,468
3,64,10,boost.preprocess.size,786064
3,64,10,boost.preprocess.time,1680
3,64,10,boost.preprocess.number,1395
3,64,10,boost.preprocess.time_p,1154.0
3,64,10,boost.mine.size,56448
3,64,10,boost.mine.time,870
3,64,10,prune.theta,0.078035
3,64,10,prune.includes,-sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--void-determineLMDirection-double[],double[],double[],double[]-- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--double-getChiSquare--- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--double-getRMS--- -sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--void-qTy-double[]-- -sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--void-determineLMParameter-double[],double,double[],double[],double[],double[]-- -sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--void-qrDecomposition--- -sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--org.apache.commons.math.optimization.VectorialPointValuePair-doOptimize--- -sampler-include-method=-org.apache.commons.math.optimization.VectorialPointValuePair--void--init--double[],double[]-- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--void-incrementIterationsCounter--- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--org.apache.commons.math.optimization.VectorialPointValuePair-optimize-org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,double[],double[],double[]-- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--void-updateJacobian--- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--void-updateResidualsAndCost---
3,64,10,prune.includes_diff,-sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--double-getChiSquare--- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--double-getRMS--- -sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--void-qTy-double[]-- -sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--void-determineLMParameter-double[],double,double[],double[],double[],double[]-- -sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--void-qrDecomposition--- -sampler-include-method=-org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer--org.apache.commons.math.optimization.VectorialPointValuePair-doOptimize--- -sampler-include-method=-org.apache.commons.math.optimization.VectorialPointValuePair--void--init--double[],double[]-- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--void-incrementIterationsCounter--- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--org.apache.commons.math.optimization.VectorialPointValuePair-optimize-org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,double[],double[],double[]-- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--void-updateJacobian--- -sampler-include-method=-org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer--void-updateResidualsAndCost---
3,64,10,prune_s.profile.number,12488
3,64,10,prune_s.profile.time,106518
3,64,10,prune_s.profile.size,1100
3,64,10,prune.profile.number,16330
3,64,10,prune.profile.time,148611
3,64,10,prune.profile.size,1360
3,64,10,prune.preprocess.size,2284080
3,64,10,prune.preprocess.time,3241
3,64,10,prune.preprocess.number,5203
3,64,10,prune.preprocess.time_p,2596.0
3,64,10,prune.mine.size,134576
3,64,10,prune.mine.time,11950
3,64,10,end
