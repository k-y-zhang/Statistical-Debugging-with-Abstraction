TODO


RQ3


sed -i -re 's/^sleep [0-9]+$/sleep 0.5/' ./*.sh

sudo echo 'net.ipv4.tcp_tw_reuse=1' | sudo tee -a '/etc/sysctl.conf'
sudo echo 'net.ipv4.tcp_tw_recycle=1' | sudo tee -a '/etc/sysctl.conf'
sudo sysctl -p /etc/sysctl.conf



# 实验2 分析

java -jar "tools/HI$1.jar" "$PWD/outputs/" grep "$PWD/outputs/out/"

java -jar HI.jar oopsla_artifacts/single/Subjects/C/ grep out &
java -jar HI.jar oopsla_artifacts/single/Subjects/C/ bash out  &
java -jar HI.jar oopsla_artifacts/single/Subjects/C/ gzip out &
java -jar HI.jar oopsla_artifacts/single/Subjects/C/ space out &
java -jar HI.jar oopsla_artifacts/single/Subjects/C/ sed out   &
java -jar HI.jar oopsla_artifacts/single/Subjects/Java/ nanoxml out &
java -jar HI.jar oopsla_artifacts/single/Subjects/Java/ siena out &
java -jar HI.jar oopsla_artifacts/single/Subjects/Java/ derby out &
java -jar HI.jar oopsla_artifacts/single/Subjects/Java/ apache-ant out &
 

# 实验 2
java -cp ../tools/HI.jar zuo.processor.genscript.client.iterative.GenBashScriptClient
java -cp ../tools/HI.jar zuo.processor.genscript.client.iterative.GenSiemensScriptsClient
java -cp ../tools/HI.jar zuo.processor.genscript.client.iterative.GenSirScriptClient
java -cp ../tools/HI.jar zuo.processor.genscript.client.iterative.java.AntGenSirScriptClient
java -cp ../tools/HI.jar zuo.processor.genscript.client.iterative.java.DerbyGenSirScriptClient
java -cp ../tools/HI.jar zuo.processor.genscript.client.iterative.java.NanoxmlGenSirScriptClient
java -cp ../tools/HI.jar zuo.processor.genscript.client.iterative.java.SienaGenSirScriptClient




汇总 RQ3 结果

rootDir = rootPath + "oopsla_artifacts/single/Subjects/C/";
	
FileCollection.readMethods(new File(AbstractGenSirScriptClient.rootDir + subject + "/FunctionList/", methodsF));

gs = new GenRunAdaptiveFineGrainedInstrumentScript(gc.subject, gc.version, gc.subVersion, adaptiveCompile, gc.vaexecuteDir, 
    gc.vafoutputDir, gc.scriptDir, gc.vaftraceDir, gc.vexecuteDir + "failingInputs.array", gc.vexecuteDir + "passingInputs.array", gc.version + "_" + gc.subVersion + "_C_LESS_FIRST_1_average");
gs.genRunScript();

oopsla_artifacts/single/Subjects/C/subject/FunctionList/gc.version + "_" + gc.subVersion + "_C_LESS_FIRST_1_average"

f(){
  local i=$1
  #local lang=$1
  #local subject=$2
  #for $i in "C/grep" ; do 
    find "/home/paper_60/oopsla_artifacts/single/Subjects/${i}/scripts/" -name '*.sh' -delete
    find "/home/paper_60/oopsla_artifacts/single/Subjects/${i}/" -name 'time' -delete
  #done

  find "oopsla_artifacts/single/Subjects/${i}/scripts/" -name '*_a.sh' -exec bash {} \;
  find "oopsla_artifacts/single/Subjects/${i}/scripts/" -name '*_a.sh' | sed -re 's/_fg_a//' | while read line ; do 
    bash "${line}" 
  done
  find "oopsla_artifacts/single/Subjects/${i}/" -wholename '*adaptive/time' -exec cat {} \; | grep "^T" | sed -re 's/[^0-9]//g' | awk '{a+=$0;b++}END{print(a/b)}'

}

time 文件

mkdir out -p
java -cp ../tools/HI.jar zuo.util.readfile.IterativeTimeReader oopsla_artifacts/single/Subjects/C/ grep out 
java -cp ../tools/HI.jar zuo.util.readfile.IterativeTimeReader oopsla_artifacts/single/Subjects/C/ bash out 
java -cp ../tools/HI.jar zuo.util.readfile.IterativeTimeReader oopsla_artifacts/single/Subjects/C/ gzip out 
java -cp ../tools/HI.jar zuo.util.readfile.IterativeTimeReader oopsla_artifacts/single/Subjects/C/ space out
java -cp ../tools/HI.jar zuo.util.readfile.IterativeTimeReader oopsla_artifacts/single/Subjects/C/ sed out  
java -cp ../tools/HI.jar zuo.util.readfile.IterativeTimeReader oopsla_artifacts/single/Subjects/Java/ nanoxml out
java -cp ../tools/HI.jar zuo.util.readfile.IterativeTimeReader oopsla_artifacts/single/Subjects/Java/ siena out
java -cp ../tools/HI.jar zuo.util.readfile.IterativeTimeReader oopsla_artifacts/single/Subjects/Java/ derby out
java -cp ../tools/HI.jar zuo.util.readfile.IterativeTimeReader oopsla_artifacts/single/Subjects/Java/ apache-ant out




## 

## script


find . -name '_a.sh' | while read line ; do 
  echo "$line"
done


# 注意的问题

依赖 bison tcsh zip
怀疑度有修改
注意  



